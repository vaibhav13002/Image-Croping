Server error when uploading large nuumber of files
face not detected

<!DOCTYPE html>
<html>
<head>
    <title>Image Upload</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
            overflow: hidden;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #ddd;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .sand {
            position: absolute;
            border-radius: 50%;
            opacity: 0.7;
            animation: sandAnimation 10s infinite linear;
        }

        @keyframes sandAnimation {
            0% {
                transform: translate(-50%, -50%) scale(0);
                opacity: 1;
            }
            100% {
                transform: translate(-50%, calc(-50% + 100vh)) scale(2);
                opacity: 0;
            }
        }

        .container {
            background-color: #333;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            z-index: 1;
            max-width: 800px;
            width: 100%;
        }

        h1, h2 {
            color: #eee;
            text-align: center;
            margin-bottom: 30px;
        }

        .image-container {
            position: relative;
            overflow: hidden;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            margin-bottom: 20px;
        }

        .download-button {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            text-align: center;
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 10px;
            opacity: 0;
            transition: opacity 0.2s;
        }

        .image-container:hover .download-button {
            opacity: 1;
        }

        .custom-size {
            display: none;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
        }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
        }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }
    </style>
</head>
<body>
    <div class="container">
        <p>Welcome, {{ user['username'] }}!</p>
        <p><a href="{{ url_for('logout') }}">Log out</a></p>
        <h1>Upload and Process Images</h1>
        <form method="POST" action="/processimage" enctype="multipart/form-data" class="mt-3">
            <div class="form-group">
                <label for="file">Select Images to Upload:</label>
                <input type="file" name="file" class="form-control-file" multiple>
            </div>

            <label for="size">Image Size:</label>
            <select name="size" id="size" class="form-control">
                <option value="" selected disabled>Select an option</option>
                <option value="standard">Standard</option>
                <option value="custom">Custom</option>
            </select><br>

            <div id="standard-size" class="custom-size">
                <label for="standard_size">Standard Size:</label>
                <select name="standard_size" class="form-control">
                    <option value="small">Passport Size</option>
                    <option value="medium">Identity Card</option>
                    <option value="large">Large</option>
                </select><br>
            </div>

            <div id="custom-size" class="custom-size">
                <label for="custom_height">Custom Height:</label>
                <input type="number" step="0.001" name="custom_height" class="form-control"><br>

                <label for="custom_width">Custom Width:</label>
                <input type="number" step="0.001" name="custom_width" class="form-control"><br>

                <label for="selected_unit">Units:</label>
                <select name="selected_unit" class="form-control">
                    <option value="mm">mm</option>
                    <option value="cm">cm</option>
                    <option value="inches">inches</option>
                </select><br>
            </div>

            <button type="submit" class="btn btn-primary" id="submit-button">Upload and Process</button>
        </form>

        {% if errors %}
        <h2 class="mt-4">Error Messages:</h2>
        <ul>
            {% for error in errors %}
            <li>{{ error }}</li>
            {% endfor %}
        </ul>
        <a href="/download_errors" class="btn btn-danger">
            <i class="fas fa-download"></i> Download Error Messages
        </a>
        {% endif %}

        <div class="row">
            <div class="col-md-6">
                {% if result %}
                <h2 class="mt-4">Original Images</h2>
                <div class="row justify-content-center">
                    {% for original_image in original_images %}
                    <div class="col-md-4 mb-4">
                        <div class="image-container">
                            <img src="{{ original_image }}" class="img-fluid">
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% endif %}
            </div>
            <div class="col-md-6">
                {% if result %}
                <div class="mt-4 text-center">
                    <a href="/download_all" class="btn btn-success">
                        <i class="fas fa-download"></i> Download All Images
                    </a>
                </div>
                <h2 class="mt-4">Processed Images:</h2>
                <div class="row justify-content-center">
                    {% for result_item in result %}
                    <div class="col-md-4 mb-4">
                        <div class="image-container">
                            <img src="{{ result_item.image }}" class="img-fluid">
                            <div class="download-button">
                                <a href="{{ result_item.image }}" class="btn btn-primary" download="{{ result_item.name }}">
                                    <i class="fas fa-download"></i> Download
                                </a>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% endif %}
            </div>
        </div>
    </div>
   <script>
    // Get references to the size and custom size elements
    const sizeSelect = document.getElementById('size');
    const standardSize = document.getElementById('standard-size');
    const customSize = document.getElementById('custom-size');
    const customHeight = document.querySelector('input[name="custom_height"]');
    const customWidth = document.querySelector('input[name="custom_width"]');
    const selectedUnit = document.querySelector('select[name="selected_unit"]');
    const submitButton = document.getElementById('submit-button');

    // Function to enable/disable the submit button
    function toggleSubmitButton() {
        if (sizeSelect.value === 'standard') {
            submitButton.removeAttribute('disabled');
        } else if (sizeSelect.value === 'custom' && customHeight.value && customWidth.value && selectedUnit.value) {
            submitButton.removeAttribute('disabled');
        } else {
            submitButton.setAttribute('disabled', 'disabled');
        }
    }

    // Add event listener to the size select element
    sizeSelect.addEventListener('change', function() {
        if (this.value === 'standard') {
            standardSize.style.display = 'block';
            customSize.style.display = 'none';
        } else if (this.value === 'custom') {
            standardSize.style.display = 'none';
            customSize.style.display = 'block';
        } else {
            standardSize.style.display = 'none';
            customSize.style.display = 'none';
        }

        toggleSubmitButton();
    });

    // Add event listeners for custom size inputs and unit select
    customHeight.addEventListener('input', toggleSubmitButton);
    customWidth.addEventListener('input', toggleSubmitButton);
    selectedUnit.addEventListener('change', toggleSubmitButton);

    // Initially disable the submit button on page load
    toggleSubmitButton();

            // Background animation
            function createSandParticle() {
            const sand = document.createElement('div');
            sand.classList.add('sand');
            sand.style.left = `${Math.random() * 100}vw`;
            sand.style.top = `${Math.random() * 100}vh`;
            sand.style.width = `${Math.random() * 10 + 5}px`;
            sand.style.height = sand.style.width;
            sand.style.backgroundColor = `rgb(${Math.random() * 200 + 55}, ${Math.random() * 200 + 55}, ${Math.random() * 100})`;
            sand.style.animationDelay = `${Math.random() * 10}s`;
            document.body.appendChild(sand);
            setTimeout(() => {
                sand.remove();
            }, 10000);
        }

        setInterval(createSandParticle, 100);
</script>

</body>
</html>
